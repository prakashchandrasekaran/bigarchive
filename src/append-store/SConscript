import glob

Import('env', 'project', 'mymode', 'debugcflags', 'releasecflags', 'PROJECT_HOME', 'SOURCE_HOME', 'BINARY_HOME', 'LIB_HOME', 'INCLUDE_HOME'
	, 'EXCEPTION_HOME')

localenv = env.Clone()

buildroot = BINARY_HOME + "/"  + mymode  #holds the root of the build directory tree

builddir = buildroot + '/' + project   #holds the build directory for this project

targetpath = builddir + '/' + project  #holds the path to the executable in the build directory

print "-----------------------------------------------------------------------------"

print "Building project ........ " + project

localenv.Append(CPPPATH = [INCLUDE_HOME, EXCEPTION_HOME, SOURCE_HOME + "/" + "fs"])

if mymode == 'debug':
   localenv.Append(CCFLAGS=debugcflags)
else:
   localenv.Append(CCFLAGS=releasecflags)

localenv.VariantDir(builddir, ".", duplicate=0)

srclst = map(lambda x: x, glob.glob('*.cpp'))

print "Compiling Sources " ,
print srclst

pgm = localenv.Object(srclst)

#env.Alias('all', pgm)

print "-----------------------------------------------------------------------------"
